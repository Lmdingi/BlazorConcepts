@page "/servers/add"

@inject NavigationManager NavigationManager
@inject IServersEFCoreRepository ServersEFCoreRepository

<h3>Add Server</h3>
<br />

<EditForm Model="Server" FormName="formServer" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <InputNumber @bind-Value="Server.Id" hidden></InputNumber>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Name</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="Server.Name" class="form-control"></InputText>
            <ValidationMessage for="()=> Server.Name"></ValidationMessage>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">City</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="Server.City" class="form-control"></InputText>
            <ValidationMessage for="()=> Server.City"></ValidationMessage>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Online</label>
        </div>
        <div class="col-6">
            <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input"></InputCheckbox>
        </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Save</button>
    &nbsp;      <a href="/servers" class="btn btn-primary">Close</a>
</EditForm>

@code {
    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? Server { get; set; } = new() { IsOnline = false };

    private void Submit()
    {
        if(Server != null)
        {
            ServersEFCoreRepository.AddServer(Server);
        }

        try
        {
            NavigationManager.NavigateTo("/servers");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
