@page "/servers/{id:int}"

@inject NavigationManager NavigationManager

<h3>Edit Server</h3>
<br />
<br />

@if(Server != null)
{
    <EditForm Model="Server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="Server.Id" hidden></InputNumber>

        <FieldComponent Label="Name">
            <Control>
                <InputText @bind-Value="Server.Name" class="form-control"></InputText>
            </Control>

            <ValidationControl>
                <ValidationMessage for="()=> Server.Name"></ValidationMessage>
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputText @bind-Value="Server.City" class="form-control"></InputText>
            </Control>

            <ValidationControl>
                <ValidationMessage for="()=> Server.Name"></ValidationMessage>
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input"></InputCheckbox>
            </Control>

        </FieldComponent>

        <br />
        <button class="btn btn-primary" type="submit">Update</button>
        &nbsp;      <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? Server { get; set; }

    protected override void OnParametersSet()
    {
        Server ??= ServersRepository.GetServerById(this.Id);
    }

    private void Submit()
    {
        if(Server != null)
        {
            ServersRepository.UpdateServer(Server.Id, Server);
        }

        try
        {
            NavigationManager.NavigateTo("/servers");
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
