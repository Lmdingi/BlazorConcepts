@page "/servers"
@inject NavigationManager NavigationManager


<h3>Servers</h3>

<br />
<br />


<div class="container-fluid text-center">
    <div class="row w-100">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary">@city</button>
                    </div>
                </div>               
            </div>
        }
    </div>
</div>

<br />

<p>
    <ServerComponent></ServerComponent>
</p>


<ul>
    @foreach(var server in servers)
    {
        <li>
            @server.Name in @server.City is 
            <span style="color:@((server.IsOnline ? "green" : "red"))">
                @(server.IsOnline ? "online" : "offline")
            </span>
            &nbsp;
            <a href="/servers/@server.Id" class="btn btn-link">Edit</a>
            &nbsp
            <EditForm 
            Model="server" 
            FormName="@($"form-server-{server.Id}")" 
            OnValidSubmit="@(()=> {DeleteServer(server.Id);})">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>

        </li>
    }
</ul>

<p>
    <a href="/servers/add">Add Server</a>
</p>

@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");
    private List<string> cities = CitiesRepository.GetCities();

    private void DeleteServer(int id)
    {
        if(id > 0)
        {
            ServersRepository.DeleteServer(id);
            // NavigationManager.Refresh();
        }

        try
        {
            NavigationManager.NavigateTo("/servers");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
